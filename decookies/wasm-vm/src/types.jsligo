
type cookieBaker =
  {
    passiveCPS: nat,
    cookies: nat,
    cursors: nat,
    grandmas: nat,
    farms: nat,
    mines: nat,
    factories: nat,
    banks: nat,
    temples: nat,
    cursorCost: nat,
    grandmaCost: nat,
    farmCost: nat,
    mineCost: nat,
    factoryCost: nat,
    bankCost: nat,
    templeCost: nat,
    eatenCookies: nat,
    authorizedKeys: set<address>
  };

type storage = big_map<address, cookieBaker>;

type actions =
  | ["Cookie"]
  | ["Cursor"]
  | ["Grandma"]
  | ["Farm"]
  | ["Mine"]
  | ["Factory"]
  | ["Bank"]
  | ["Temple"];

type operationType =
  | ["Mint"]
  | ["Transfer"]
  | ["Eat"]
  | ["Delegate"];

type mint =
  {operation: actions, amount: nat, onBehalfOf: address};

type transfer =
  {amount: nat, recipient: address, onBehalfOf: address};

type eat = {amount: nat, onBehalfOf: address};

type delegate = {authorizedKey: address};

type parameter =
  | ["Mint", mint]
  | ["Transfer", transfer]
  | ["Eat", eat]
  | ["Delegate", delegate];

type return_ =

  [list<operation>,
   storage];

const init_storage: storage = Big_map.empty;
