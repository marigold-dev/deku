
type cookieBaker =
  {
    passiveCPS: nat,
    cookies: nat,
    cursors: nat,
    grandmas: nat,
    farms: nat,
    mines: nat,
    factories: nat,
    banks: nat,
    temples: nat,
    cursorCost: nat,
    grandmaCost: nat,
    farmCost: nat,
    mineCost: nat,
    factoryCost: nat,
    bankCost: nat,
    templeCost: nat,
    eatenCookies: nat,
    authorizedKeys: set<address>
  };

type storage = map<address, cookieBaker>;

type actions =
  | ["Cookie"]
  | ["Cursor"]
  | ["Grandma"]
  | ["Farm"]
  | ["Mine"]
  | ["Factory"]
  | ["Bank"]
  | ["Temple"];

type operationType = | ["Mint"] | ["Transfer"] | ["Eat"] | ["Delegate"];

type mint =
  {
    operation: actions,
    amount: nat,
    layerOneAddress: address
  };
type transfer =
  {
    amount: nat,
    recipient: address,
    layerOneAddress: address
  };
type eat =
  {
    amount: nat,
    layerOneAddress: address
  };

type delegate = {layerOneAddress: address, address: address};

type parameter = | ["Mint", mint] | ["Transfer", transfer] | ["Eat", eat] | ["Delegate", delegate]

type return_ =

  [list<operation>,
   storage];

const init_storage: storage = Map.empty;
