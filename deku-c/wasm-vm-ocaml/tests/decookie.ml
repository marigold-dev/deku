let decookie_invoke_mint_cookie =
  let str =
    {|  {"operation":"{ \"address\": \"DK1NmndDdhkWdWpX7NMArqEjjnWR3xLfM4Kf\",\n  \"argument\":\n    [ \"Pair\",\n      [ [ \"Pair\",\n          [ [ \"Int\", \"1\" ],\n            [ \"Option\",\n              [ \"Some\",\n                [ \"Union\",\n                  [ \"Left\",\n                    [ \"Union\",\n                      [ \"Left\", [ \"Union\", [ \"Right\", [ \"Unit\" ] ] ] ] ] ] ] ] ] ] ],\n        [ \"Pair\",\n          [ [ \"Union\", [ \"Left\", [ \"Union\", [ \"Right\", [ \"Unit\" ] ] ] ] ],\n            [ \"Option\", [ \"None\", {} ] ] ] ] ] ] }","tickets":[]}|}
  in
  let res =
    Ocaml_wasm_vm.Operation_payload.t_of_yojson @@ Yojson.Safe.from_string str
  in
  match res.operation with
  | Call { address = _; argument } ->
      Ocaml_wasm_vm.Operation.Call
        {
          address =
            Deku_ledger.Address.of_contract_address
              ( Deku_ledger.Contract_address.of_user_operation_hash
                  (Deku_crypto.BLAKE2b.hash "tutturu"),
                None );
          argument;
        }
  | _ -> failwith "impossible"

let decookie_invoke_mint_fifteen_cookies =
  let str =
    {|  {"operation":"{ \"address\": \"DK1NmndDdhkWdWpX7NMArqEjjnWR3xLfM4Kf\",\n  \"argument\":\n    [ \"Pair\",\n      [ [ \"Pair\",\n          [ [ \"Int\", \"15\" ],\n            [ \"Option\",\n              [ \"Some\",\n                [ \"Union\",\n                  [ \"Left\",\n                    [ \"Union\",\n                      [ \"Left\", [ \"Union\", [ \"Right\", [ \"Unit\" ] ] ] ] ] ] ] ] ] ] ],\n        [ \"Pair\",\n          [ [ \"Union\", [ \"Left\", [ \"Union\", [ \"Right\", [ \"Unit\" ] ] ] ] ],\n            [ \"Option\", [ \"None\", {} ] ] ] ] ] ] }","tickets":[]}|}
  in
  let res =
    Ocaml_wasm_vm.Operation_payload.t_of_yojson @@ Yojson.Safe.from_string str
  in
  match res.operation with
  | Call { address = _; argument } ->
      Ocaml_wasm_vm.Operation.Call
        {
          address =
            Deku_ledger.Address.of_contract_address
              ( Deku_ledger.Contract_address.of_user_operation_hash
                  (Deku_crypto.BLAKE2b.hash "tutturu"),
                None );
          argument;
        }
  | _ -> failwith "impossible"

let decookie_invoke_mint_cursor =
  let str =
    {|  {"operation":"{ \"address\": \"DK1NmndDdhkWdWpX7NMArqEjjnWR3xLfM4Kf\",\n  \"argument\":\n    [ \"Pair\",\n      [ [ \"Pair\",\n          [ [ \"Int\", \"5\" ],\n            [ \"Option\",\n              [ \"Some\",\n                [ \"Union\",\n                  [ \"Left\",\n                    [ \"Union\",\n                      [ \"Right\", [ \"Union\", [ \"Left\", [ \"Unit\" ] ] ] ] ] ] ] ] ] ] ],\n        [ \"Pair\",\n          [ [ \"Union\", [ \"Left\", [ \"Union\", [ \"Right\", [ \"Unit\" ] ] ] ] ],\n            [ \"Option\", [ \"None\", {} ] ] ] ] ] ] }","tickets":[]}|}
  in
  let res =
    Ocaml_wasm_vm.Operation_payload.t_of_yojson @@ Yojson.Safe.from_string str
  in
  match res.operation with
  | Call { address = _; argument } ->
      Ocaml_wasm_vm.Operation.Call
        {
          address =
            Deku_ledger.Address.of_contract_address
              ( Deku_ledger.Contract_address.of_user_operation_hash
                  (Deku_crypto.BLAKE2b.hash "tutturu"),
                None );
          argument;
        }
  | _ -> failwith "impossible"

let decookie_originate =
  let str =
    {|
  {"operation":"{ \"initial_storage\": [ \"Map\", [] ],\n  \"module\":\n    \"\",\n  \"constants\":\n    [ [ 0, [ \"Int\", \"1\" ] ], [ 1, [ \"Int\", \"15\" ] ], [ 2, [ \"Int\", \"100\" ] ],\n      [ 3, [ \"Int\", \"1100\" ] ], [ 4, [ \"Int\", \"12000\" ] ],\n      [ 5, [ \"Int\", \"130000\" ] ], [ 6, [ \"Int\", \"1400000\" ] ],\n      [ 7, [ \"Int\", \"20000000\" ] ], [ 8, [ \"Int\", \"115\" ] ],\n      [ 9, [ \"String\", \"DIV by 0\" ] ], [ 10, [ \"Int\", \"3\" ] ],\n      [ 11, [ \"Int\", \"8\" ] ], [ 12, [ \"Int\", \"47\" ] ],\n      [ 13, [ \"Int\", \"260\" ] ], [ 14, [ \"Int\", \"1400\" ] ],\n      [ 15, [ \"Int\", \"7800\" ] ],\n      [ 16, [ \"String\", \"Operation is mandatory for minting\" ] ],\n      [ 17, [ \"String\", \"There is not recipient\" ] ] ], \"entrypoints\": {} }","tickets":[]}
    |}
  in
  let res =
    Ocaml_wasm_vm.Operation_payload.t_of_yojson @@ Yojson.Safe.from_string str
  in
  res.operation

let storage_testable =
  Alcotest.testable Ocaml_wasm_vm.Value.pp (fun a b ->
      Ocaml_wasm_vm.Value.compare a b = 0)

let new_address () =
  let open Deku_crypto in
  let open Deku_ledger in
  let secret = Ed25519.Secret.generate () in
  let secret = Secret.Ed25519 secret in
  let key = Key.of_secret secret in
  let key_hash = Key_hash.of_key key in
  Address.of_key_hash key_hash

let decookie_test =
  let open Alcotest in
  test_case "Originate/Invoke Decookie" `Quick (fun () ->
      let open Ocaml_wasm_vm in
      let addr = new_address () in
      let x =
        Env.execute
          ~operation_hash:(Deku_crypto.BLAKE2b.hash "tutturu")
          ~tickets:[]
          Env.
            {
              source = addr;
              sender = addr;
              ledger = Deku_ledger.Ledger.initial;
              state = State.empty;
              ticket_table = Ticket_table.init [];
            }
          ~operation:decookie_originate
      in
      let state = Result.get_ok x in
      let (State_entry.Entry { storage; _ }) =
        State.fetch_contract state.state
          Deku_ledger.(
            Contract_address.of_user_operation_hash
              (Deku_crypto.BLAKE2b.hash "tutturu"))
      in
      (check bool) "Originate decookies contract" true
        (storage = Value.Map Value.Map.empty);
      let x =
        Env.execute
          ~operation_hash:(Deku_crypto.BLAKE2b.hash "tutturu")
          ~tickets:[]
          Env.
            {
              source = addr;
              sender = addr;
              ledger = Deku_ledger.Ledger.initial;
              state = state.state;
              ticket_table = Ticket_table.init [];
            }
          ~operation:decookie_invoke_mint_cookie
      in
      let state = Result.get_ok x in
      (let (State_entry.Entry { storage; _ }) =
         State.fetch_contract state.state
           Deku_ledger.(
             Contract_address.of_user_operation_hash
               (Deku_crypto.BLAKE2b.hash "tutturu"))
       in
       let json =
         Data_encoding.Json.from_string
           {|
              [ "Map",
                  [ [ [ "String", "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw" ],
                      [ "Pair",
                        [ [ "Pair",
                            [ [ "Pair",
                                [ [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1400000" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "1" ], [ "Int", "15" ] ] ] ] ],
                                  [ "Pair",
                                    [ [ "Pair", [ [ "Int", "0" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "0" ], [ "Int", "130000" ] ] ] ] ] ] ],
                              [ "Pair",
                                [ [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1100" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "100" ], [ "Int", "0" ] ] ] ] ],
                                  [ "Pair",
                                    [ [ "Pair", [ [ "Int", "12000" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "0" ], [ "Int", "20000000" ] ] ] ] ] ] ] ] ],
                          [ "Int", "0" ] 
                          ] 
                        ] 
                    ] 
                ] 
              ]
            |}
       in
       let json = Result.get_ok json in
       let rawExpectedState = Data_encoding.Json.destruct Value.encoding json in
       let modifiedState =
         match rawExpectedState with
         | Value.Map t ->
             let v =
               Value.Map.find
                 (Value.String "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw") t
             in
             let v =
               Value.Map.add
                 (Value.String
                    (Base.String.substr_replace_all ~pattern:"\"" ~with_:""
                       (Yojson.Safe.pretty_to_string
                       @@ Env.Address.yojson_of_t addr)))
                 v t
             in
             Value.Map.remove
               (Value.String "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw") v
         | _ -> failwith "unreachable!"
       in
       let expectedState = Value.Map modifiedState in
       (check storage_testable) "Invoking Cookie minting" expectedState storage);
      let x =
        Env.execute
          ~operation_hash:(Deku_crypto.BLAKE2b.hash "tutturu")
          ~tickets:[]
          Env.
            {
              source = addr;
              sender = addr;
              ledger = Deku_ledger.Ledger.initial;
              state = state.state;
              ticket_table = Ticket_table.init [];
            }
          ~operation:decookie_invoke_mint_fifteen_cookies
      in
      let state = Result.get_ok x in
      (let (State_entry.Entry { storage; _ }) =
         State.fetch_contract state.state
           Deku_ledger.(
             Contract_address.of_user_operation_hash
               (Deku_crypto.BLAKE2b.hash "tutturu"))
       in
       let json =
         Data_encoding.Json.from_string
           {|
              [ "Map",
                  [ [ [ "String", "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw" ],
                      [ "Pair",
                        [ [ "Pair",
                            [ [ "Pair",
                                [ [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1400000" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "16" ], [ "Int", "15" ] ] ] ] ],
                                  [ "Pair",
                                    [ [ "Pair", [ [ "Int", "0" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "0" ], [ "Int", "130000" ] ] ] ] ] ] ],
                              [ "Pair",
                                [ [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1100" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "100" ], [ "Int", "0" ] ] ] ] ],
                                  [ "Pair",
                                    [ [ "Pair", [ [ "Int", "12000" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "0" ], [ "Int", "20000000" ] ] ] ] ] ] ] ] ],
                          [ "Int", "0" ] 
                          ] 
                        ] 
                    ] 
                ] 
              ]
            |}
       in
       let json = Result.get_ok json in
       let rawExpectedState = Data_encoding.Json.destruct Value.encoding json in
       let modifiedState =
         match rawExpectedState with
         | Value.Map t ->
             let v =
               Value.Map.find
                 (Value.String "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw") t
             in
             let v =
               Value.Map.add
                 (Value.String
                    (Base.String.substr_replace_all ~pattern:"\"" ~with_:""
                       (Yojson.Safe.pretty_to_string
                       @@ Env.Address.yojson_of_t addr)))
                 v t
             in
             Value.Map.remove
               (Value.String "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw") v
         | _ -> failwith "unreachable!"
       in
       let expectedState = Value.Map modifiedState in
       (check storage_testable) "Invoking Several Cookies minting" expectedState
         storage);
      let x =
        Env.execute
          ~operation_hash:(Deku_crypto.BLAKE2b.hash "tutturu")
          ~tickets:[]
          Env.
            {
              source = addr;
              sender = addr;
              ledger = Deku_ledger.Ledger.initial;
              state = state.state;
              ticket_table = Ticket_table.init [];
            }
          ~operation:decookie_invoke_mint_cursor
      in

      let state = Result.get_ok x in
      (let (State_entry.Entry { storage; _ }) =
         State.fetch_contract state.state
           Deku_ledger.(
             Contract_address.of_user_operation_hash
               (Deku_crypto.BLAKE2b.hash "tutturu"))
       in
       let json =
         Data_encoding.Json.from_string
           {|
              [ "Map",
                  [ [ [ "String", "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw" ],
                      [ "Pair",
                        [ [ "Pair",
                            [ [ "Pair",
                                [ [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1400000" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "1" ], [ "Int", "17" ] ] ] ] ],
                                  [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "0" ], [ "Int", "130000" ] ] ] ] ] ] ],
                              [ "Pair",
                                [ [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1100" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "100" ], [ "Int", "0" ] ] ] ] ],
                                  [ "Pair",
                                    [ [ "Pair", [ [ "Int", "12000" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "1" ], [ "Int", "20000000" ] ] ] ] ] ] ] ] ],
                          [ "Int", "0" ] 
                          ] 
                        ] 
                    ] 
                ] 
              ]
            |}
       in
       let json = Result.get_ok json in
       let rawExpectedState = Data_encoding.Json.destruct Value.encoding json in
       let modifiedState =
         match rawExpectedState with
         | Value.Map t ->
             let v =
               Value.Map.find
                 (Value.String "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw") t
             in
             let v =
               Value.Map.add
                 (Value.String
                    (Base.String.substr_replace_all ~pattern:"\"" ~with_:""
                       (Yojson.Safe.pretty_to_string
                       @@ Env.Address.yojson_of_t addr)))
                 v t
             in
             Value.Map.remove
               (Value.String "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw") v
         | _ -> failwith "unreachable!"
       in
       let expectedState = Value.Map modifiedState in
       (check storage_testable) "Invoking Cursor minting" expectedState storage);
      let x =
        Env.execute
          ~operation_hash:(Deku_crypto.BLAKE2b.hash "tutturu")
          ~tickets:[]
          Env.
            {
              source = addr;
              sender = addr;
              ledger = Deku_ledger.Ledger.initial;
              state = state.state;
              ticket_table = Ticket_table.init [];
            }
          ~operation:decookie_invoke_mint_cookie
      in
      let state = Result.get_ok x in
      (let (State_entry.Entry { storage; _ }) =
         State.fetch_contract state.state
           Deku_ledger.(
             Contract_address.of_user_operation_hash
               (Deku_crypto.BLAKE2b.hash "tutturu"))
       in
       let json =
         Data_encoding.Json.from_string
           {|
              [ "Map",
                  [ [ [ "String", "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw" ],
                      [ "Pair",
                        [ [ "Pair",
                            [ [ "Pair",
                                [ [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1400000" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "2" ], [ "Int", "17" ] ] ] ] ],
                                  [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "0" ], [ "Int", "130000" ] ] ] ] ] ] ],
                              [ "Pair",
                                [ [ "Pair",
                                    [ [ "Pair", [ [ "Int", "1100" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "100" ], [ "Int", "0" ] ] ] ] ],
                                  [ "Pair",
                                    [ [ "Pair", [ [ "Int", "12000" ], [ "Int", "0" ] ] ],
                                      [ "Pair", [ [ "Int", "1" ], [ "Int", "20000000" ] ] ] ] ] ] ] ] ],
                          [ "Int", "0" ] 
                          ] 
                        ] 
                    ] 
                ] 
              ]
            |}
       in
       let json = Result.get_ok json in
       let rawExpectedState = Data_encoding.Json.destruct Value.encoding json in
       let modifiedState =
         match rawExpectedState with
         | Value.Map t ->
             let v =
               Value.Map.find
                 (Value.String "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw") t
             in
             let v =
               Value.Map.add
                 (Value.String
                    (Base.String.substr_replace_all ~pattern:"\"" ~with_:""
                       (Yojson.Safe.pretty_to_string
                       @@ Env.Address.yojson_of_t addr)))
                 v t
             in
             Value.Map.remove
               (Value.String "tz1QzQLQcoCfjjcHR5w9bCEXLyQMtYhmFLzw") v
         | _ -> failwith "unreachable!"
       in
       let expectedState = Value.Map modifiedState in
       (check storage_testable) "Invoking Cookie minting after cursor"
         expectedState storage);
      ())
