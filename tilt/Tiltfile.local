def load_deku_services (deku_nodes):
  lines = ["""export HASH=$(deku-cli produce-block "$DATA_DIRECTORY/0" | awk \'{ print $2 }\')"""];

  for i in range(len(deku_nodes)):
    http_request = http_get_action(9000 + i)
    local_resource(
      deku_nodes[i],
      "dune build @install",
      serve_cmd='deku-node "$DATA_DIRECTORY/$i" --listen-prometheus="900%s" -v' % i,
      serve_env={"DATA_DIRECTORY": "./data/%s" % i},
      labels=["deku"],
      resource_deps=["deku-setup"],
      readiness_probe=probe(http_get=http_request),
      allow_parallel=True,
    )

    lines.append('deku-cli sign-block "$DATA_DIRECTORY/%s" "$HASH"' % i)

  start_script = " && ".join(lines)

  print(start_script)

  local_resource(
    'deku-net',
    start_script,
    env={"DATA_DIRECTORY": "./data"},
    resource_deps=deku_nodes,
    labels=["scripts"],
    auto_init=True, # trigger once at start
    allow_parallel=False,
    trigger_mode=TRIGGER_MODE_MANUAL,
    )

def make_deku_yaml (_):
  # We must return a valid (but empty) docker-compose configuration
  return encode_yaml({'version': '3.8', 'services': {}})