import * as fc from 'fast-check';
import { createCookieBaker } from '../src/state';
// 77
export const cookieBakerArbitrary = () =>
    fc.tuple(fc.integer({ min: 0, max: 2000000000 }),
        fc.integer({ min: 0, max: 200 }),
        fc.integer({ min: 0, max: 200 }),
        fc.integer({ min: 0, max: 200 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
        fc.integer({ min: 0, max: 10 }),
    ).map(
        ([cookies,
            cursors,
            grandmas,
            farms,
            mines,
            factories,
            banks,
            temples,
            wizards,
            shipments,
            alchemies,
            portals,
            timeMachines,
            antimatters,
            prisms,
            chanceMakers,
            fractals,
            javaScripts,
            idleverses,
            cordexs,
            freeCursor,
            freeGrandma,
            freeFarm,
            freeMine,
            freeFactory,
            freeBank,
            freeTemple,
            freeWizard,
            freeShipment,
            freeAlchemy,
            freePortal,
            freeTimeMachine,
            freeAntimatter,
            freePrism,
            freeChanceMaker,
            freeFractal,
            freeJavaScript,
            freeIdleverse,
            freeCordex,
        ]) => {
            const cookie_baker = createCookieBaker(
                cookies,
                cursors,
                grandmas,
                farms,
                mines,
                factories,
                banks,
                temples,
                wizards,
                shipments,
                alchemies,
                portals,
                timeMachines,
                antimatters,
                prisms,
                chanceMakers,
                fractals,
                javaScripts,
                idleverses,
                cordexs,
                freeCursor,
                freeGrandma,
                freeFarm,
                freeMine,
                freeFactory,
                freeBank,
                freeTemple,
                freeWizard,
                freeShipment,
                freeAlchemy,
                freePortal,
                freeTimeMachine,
                freeAntimatter,
                freePrism,
                freeChanceMaker,
                freeFractal,
                freeJavaScript,
                freeIdleverse,
                freeCordex,
            )
            return cookie_baker;
        });